#!/usr/bin/env python3
"""
Solution d'urgence : Nettoie les traductions corrompues et configure le site pour fonctionner
"""

import os
import shutil

def clean_mo_files():
    """Supprime tous les fichiers .mo corrompus"""
    locale_dir = os.path.join(os.path.dirname(__file__), 'locale')
    
    print("üßπ Nettoyage des fichiers .mo corrompus...")
    
    deleted_count = 0
    for root, dirs, files in os.walk(locale_dir):
        for file in files:
            if file.endswith('.mo'):
                file_path = os.path.join(root, file)
                try:
                    os.remove(file_path)
                    print(f"  üóëÔ∏è Supprim√©: {file_path}")
                    deleted_count += 1
                except Exception as e:
                    print(f"  ‚ö†Ô∏è Erreur lors de la suppression de {file_path}: {e}")
    
    print(f"‚úÖ {deleted_count} fichiers .mo supprim√©s")

def create_temporary_settings():
    """Cr√©e un fichier de configuration temporaire pour d√©sactiver les traductions si n√©cessaire"""
    settings_override = """
# Ajoutez ceci temporairement √† settings.py si les traductions posent probl√®me :
USE_I18N = False
USE_L10N = False
LANGUAGE_CODE = 'en'
"""
    
    temp_file = os.path.join(os.path.dirname(__file__), 'settings_override_temp.txt')
    with open(temp_file, 'w', encoding='utf-8') as f:
        f.write(settings_override)
    
    print(f"üìù Configuration de secours cr√©√©e dans: {temp_file}")

def update_language_settings():
    """Met √† jour les param√®tres de langue pour une configuration stable"""
    settings_file = os.path.join(os.path.dirname(__file__), 'core', 'settings.py')
    
    try:
        # Lire le fichier settings.py
        with open(settings_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # V√©rifier si les param√®tres multilingues sont corrects
        if "USE_I18N = True" in content and "LANGUAGE_CODE = 'en'" in content:
            print("‚úÖ Param√®tres de langue corrects dans settings.py")
            return True
        else:
            print("‚ö†Ô∏è Param√®tres de langue √† v√©rifier dans settings.py")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la lecture de settings.py: {e}")
        return False

def main():
    print("üîß Script de nettoyage et r√©paration des traductions")
    print("=" * 55)
    
    # √âtape 1: Nettoyer les fichiers .mo corrompus
    clean_mo_files()
    
    # √âtape 2: V√©rifier les param√®tres
    print("\nüîç V√©rification des param√®tres...")
    update_language_settings()
    
    # √âtape 3: Cr√©er un fichier de secours
    print("\nüìã Cr√©ation des fichiers de secours...")
    create_temporary_settings()
    
    # Instructions
    print("\nüéØ Instructions :")
    print("  1. Essayez de red√©marrer Django maintenant :")
    print("     python manage.py runserver")
    print("")
    print("  2. Si l'erreur persiste, utilisez une des solutions :")
    print("")
    print("     Solution A - Site en anglais uniquement :")
    print("     Ajoutez temporairement √† core/settings.py :")
    print("     USE_I18N = False")
    print("     LANGUAGE_CODE = 'en'")
    print("")
    print("     Solution B - Installer gettext sur Windows :")
    print("     1. Installez Git for Windows (inclut gettext)")
    print("     2. Red√©marrez le terminal")
    print("     3. Ex√©cutez: python manage.py compilemessages")
    print("")
    print("  3. Testez le site :")
    print("     http://127.0.0.1:8000/")
    print("")
    print("‚ú® Le site devrait maintenant fonctionner !")

if __name__ == "__main__":
    main()