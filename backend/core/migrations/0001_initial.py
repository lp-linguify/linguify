# Generated by Django 5.1.2 on 2025-06-15 22:50

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SitemapGenerationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_sitemaps', models.IntegerField(default=0)),
                ('total_urls', models.IntegerField(default=0)),
                ('total_images', models.IntegerField(default=0)),
                ('total_videos', models.IntegerField(default=0)),
                ('file_sizes', models.JSONField(default=dict)),
                ('validation_results', models.JSONField(default=dict)),
                ('performance_metrics', models.JSONField(default=dict)),
                ('compression_ratios', models.JSONField(default=dict)),
                ('search_engine_pings', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'core_sitemap_generation_report',
                'ordering': ['-generation_date'],
            },
        ),
        migrations.CreateModel(
            name='SystemManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Gestion Système', max_length=100)),
                ('description', models.TextField(default='Interface de gestion générale du système')),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Gestion Système',
                'verbose_name_plural': 'Gestion Système',
                'db_table': 'core_system_management',
                'permissions': [('can_manage_system', 'Can manage system'), ('can_run_tests', 'Can run tests'), ('can_fix_translations', 'Can fix translations'), ('can_check_auth', 'Can check authentication')],
            },
        ),
        migrations.CreateModel(
            name='SearchEngineStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.CharField(choices=[('google', 'Google'), ('bing', 'Bing'), ('yandex', 'Yandex'), ('duckduckgo', 'DuckDuckGo')], max_length=20)),
                ('last_ping_date', models.DateTimeField(blank=True, null=True)),
                ('last_ping_success', models.BooleanField(default=False)),
                ('response_time', models.FloatField(default=0)),
                ('indexed_pages', models.IntegerField(default=0)),
                ('crawl_errors', models.IntegerField(default=0)),
                ('last_crawl_date', models.DateTimeField(blank=True, null=True)),
                ('status_details', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'core_search_engine_status',
                'unique_together': {('engine',)},
            },
        ),
        migrations.CreateModel(
            name='SEOPageMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('h1_count', models.IntegerField(default=0)),
                ('h2_count', models.IntegerField(default=0)),
                ('word_count', models.IntegerField(default=0)),
                ('internal_links', models.IntegerField(default=0)),
                ('external_links', models.IntegerField(default=0)),
                ('images_without_alt', models.IntegerField(default=0)),
                ('page_load_time', models.FloatField(default=0)),
                ('mobile_friendly', models.BooleanField(default=True)),
                ('has_structured_data', models.BooleanField(default=False)),
                ('has_sitemap_entry', models.BooleanField(default=False)),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('robots_directive', models.CharField(default='index,follow', max_length=100)),
                ('crawl_date', models.DateTimeField(auto_now_add=True)),
                ('issues', models.JSONField(default=list)),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'core_seo_page_metrics',
                'indexes': [models.Index(fields=['url', '-crawl_date'], name='core_seo_pa_url_d4a8b2_idx'), models.Index(fields=['score'], name='core_seo_pa_score_2674c9_idx'), models.Index(fields=['-crawl_date'], name='core_seo_pa_crawl_d_086a47_idx')],
                'unique_together': {('url', 'crawl_date')},
            },
        ),
        migrations.CreateModel(
            name='SitemapLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('generate', 'Generate'), ('ping', 'Ping Search Engines'), ('validate', 'Validate'), ('compress', 'Compress')], max_length=20)),
                ('sitemaps_generated', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(default=dict)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'core_sitemap_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['action', '-timestamp'], name='core_sitema_action_f4a1fa_idx'), models.Index(fields=['success', '-timestamp'], name='core_sitema_success_67243b_idx')],
            },
        ),
    ]
