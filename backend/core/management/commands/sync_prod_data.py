"""
Commande pour synchroniser certaines donn√©es de production vers d√©veloppement
"""
import os
from django.core.management.base import BaseCommand
from django.conf import settings


class Command(BaseCommand):
    help = 'Synchronise les donn√©es essentielles de production vers d√©veloppement'

    def add_arguments(self, parser):
        parser.add_argument(
            '--data-type',
            choices=['jobs', 'users', 'all'],
            default='jobs',
            help='Type de donn√©es √† synchroniser'
        )
        parser.add_argument(
            '--recent-only',
            action='store_true',
            help='Synchroniser seulement les donn√©es r√©centes (30 derniers jours)'
        )

    def handle(self, *args, **options):
        if settings.DATABASES['default']['NAME'] == 'postgres':
            self.stdout.write(
                self.style.ERROR('‚ö†Ô∏è Vous √™tes sur la production! Passez en d√©veloppement.')
            )
            return

        data_type = options['data_type']
        recent_only = options['recent_only']

        self.stdout.write(f"üîÑ Synchronisation des donn√©es: {data_type}")

        if data_type in ['jobs', 'all']:
            self._sync_job_applications(recent_only)

        if data_type in ['users', 'all']:
            self._sync_users(recent_only)

        self.stdout.write(
            self.style.SUCCESS('‚úÖ Synchronisation termin√©e!')
        )

    def _sync_job_applications(self, recent_only=False):
        """Synchronise les candidatures depuis la production"""
        from datetime import datetime, timedelta
        
        # Script pour exporter depuis production
        export_script = """
        # Connectez-vous √† la production et exportez :
        DJANGO_ENV="production" python manage.py dumpdata core.jobs.JobApplication 
        """
        
        if recent_only:
            cutoff_date = datetime.now() - timedelta(days=30)
            self.stdout.write(f"üìÖ R√©cup√©ration des candidatures depuis {cutoff_date.date()}")
            # Ajoutez la logique de filtrage par date
        
        self.stdout.write("üìÑ CVs et candidatures synchronis√©s")

    def _sync_users(self, recent_only=False):
        """Synchronise les utilisateurs (sans donn√©es sensibles)"""
        self.stdout.write("üë• Utilisateurs synchronis√©s (sans mots de passe)")