# Generated by Django 5.1.2 on 2025-01-09 17:34

import datetime
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(choices=[('EN', 'English'), ('FR', 'French'), ('ES', 'Spanish'), ('DE', 'German'), ('IT', 'Italian'), ('PT', 'Portuguese'), ('NL', 'Dutch'), ('RU', 'Russian'), ('ZH', 'Chinese'), ('JA', 'Japanese'), ('KO', 'Korean'), ('AR', 'Arabic'), ('HI', 'Hindi')], max_length=5, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='language_icons/')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingSpecialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Teaching Specialties',
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField()),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='coach_photos/')),
                ('video_introduction', models.URLField(blank=True, null=True)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('5.00'))])),
                ('is_verified', models.BooleanField(default=False)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=15.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_lessons', models.IntegerField(default=0)),
                ('response_time', models.DurationField(default=datetime.timedelta(days=1))),
                ('is_featured', models.BooleanField(default=False)),
                ('bank_info', models.JSONField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoachLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('A1', 'Débutant'), ('A2', 'Élémentaire'), ('B1', 'Intermédiaire'), ('B2', 'Intermédiaire supérieur'), ('C1', 'Avancé'), ('C2', 'Maîtrise'), ('NT', 'Langue maternelle')], max_length=2)),
                ('teaching_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coaching.coach')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coaching.language')),
            ],
            options={
                'unique_together': {('coach', 'language')},
            },
        ),
        migrations.AddField(
            model_name='coach',
            name='languages',
            field=models.ManyToManyField(through='coaching.CoachLanguage', to='coaching.language'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration', models.IntegerField(help_text='Durée en minutes', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(180)])),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('CONFIRMED', 'Confirmé'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé'), ('REFUNDED', 'Remboursé')], default='PENDING', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('coach_payout', models.DecimalField(decimal_places=2, max_digits=10)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('lesson_objectives', models.TextField(blank=True, null=True)),
                ('materials', models.FileField(blank=True, null=True, upload_to='lesson_materials/')),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('cancellation_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_bookings', to=settings.AUTH_USER_MODEL)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coach_bookings', to='coaching.coach')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coaching.language')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('teaching_quality', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coaching.booking')),
            ],
        ),
        migrations.AddField(
            model_name='coach',
            name='specialties',
            field=models.ManyToManyField(to='coaching.teachingspecialty'),
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Lundi'), (1, 'Mardi'), (2, 'Mercredi'), (3, 'Jeudi'), (4, 'Vendredi'), (5, 'Samedi'), (6, 'Dimanche')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coaching.coach')),
            ],
            options={
                'verbose_name_plural': 'Availabilities',
                'unique_together': {('coach', 'day_of_week', 'start_time', 'end_time')},
            },
        ),
        migrations.AddIndex(
            model_name='coach',
            index=models.Index(fields=['average_rating', 'total_lessons'], name='coaching_co_average_eb33c8_idx'),
        ),
    ]
